name: CI build and publish

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'pom.xml'
      - '.github/**'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'pom.xml'
      - '.github/**'
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ env.REGISTRY }}/ijug-ev/keycloak

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '.mvn/wrapper/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Maven build
        run: ./mvnw -B -U -T 1C clean install
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
      - name: Upload build error artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maven-logs
          path: |
            target/surefire-reports/
            target/*.log


  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract Maven project version
        run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Extract Keycloak project version
        run: echo "KEYCLOAK_VERSION=$(mvn help:evaluate -Dexpression=keycloak.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.PROJECT_VERSION }}-${{ env.KEYCLOAK_VERSION }},${{ env.IMAGE_NAME }}:latest
